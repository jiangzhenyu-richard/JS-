<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>10-javascript三大特性之封装性</title>
</head>
<body>

</body>
<script>
    /*
    1,局部变量和局部函数
    无论是ES6之前还是ES6,只要定义一个函数就会开启一个新的作用域
    只要在这个新的作用域中,通过let/var定义的变量就是局部变量
    只要在这个新的作用域中,定义的函数就是局部函数

    2.什么是对象的私有变量和函数
    私有属性又叫局部属性(局部变量\局部函数)
    默认情况下对象中的属性和方法都是公有的,只要拿到对象就能操作对象的属性和方法。
    外界不能直接访问的变量和函数就是私有变量和是有函数
    构造函数的本质也是一个函数,所以也会开启一个新的作用域,所以在构造函数中定义的变量和函数就是私有和函数

    3.什么是封装?
    封装性就是隐藏实现细节,仅对外公开接口

    4.为什么要封装?
    4.1不封装的缺点:当一个类把自己的成员变量暴露给外部的时候,那么该类就失去对属性的管理权,别人可以任意的修改你的属性
    4.2封装就是将数据隐藏起来,只能用此类的方法才可以读取或者设置数据,
    不可被外部任意修改.封装是面向对象设计本质(将变化隔离)。这样降低了数据被误用的可能(提高安全性和灵活性)

     */
    //局部变量和局部函数只能在函数内调用，在外调用会报错
    // function demo() {
    //     var num = 123;
    //     let value = 456;
    //     function test() {
    //         console.log("test");
    //     }
    //     test();
    // }
    // demo();

    function People() {
        this.name ="哈哈";
        // age是一个公有属性
        this.age = 18;
        // 把age封装 改成私有属性
        let age = 33;
        // 私有方法外界获取不了
        this.setAge = function (myAge) {
            if (myAge>0){
                age = myAge;
            }
        };
        // 所以获取公有方法
        this.getAge = function () {
            return age;
        }
        this.sa = function () {
            console.log("sa.sa");
        };
        console.log(age);
    }
    let obj = new People();
    console.log(obj.name);
    // 注意点：重新定义一个age值，会覆盖原本age的值，这是属性并没有封装，没有封装别人任意修改你的属性
    obj.age = -4;
    //注意点：如果不按照setAge方法，就会得到People构造函数中Let定义的值
    obj.setAge(32);
    //获取公共方法
    console.log(obj.getAge());
</script>
</html>
